How to build:

1. decide which device and system will you target
2. get a toolchain
3. with some text editor, open envsetup.sh and edit both LIBAROMA_GCC and LIBAROMA_GPP with the correct paths
4. open a terminal here
5. run ./envsetup.sh (this sets up the terminal to build libaroma)
6. for building everything (including a test application), run ./build.sh
7. report any errors/bugs (except building warnings) at https://github.com/MLXProjects/libaroma/issues

How to test:
1. build the application with "app.sh appname"
2. run the correct script for your target.
If building for your PC run "native.sh appname r"
If for android recovery run "recovery.sh appname r"
Note the "r" at the end, that's for not building the app before testing it (you've already built it, right?)

Below, what each script here does:

envsetup.sh (optionally passing d as parameter):
	prepares current shell to build libaroma, setting up the environment.
	if d is passed as parameter, enable debug options (and build as debug)
build.sh:
	build dependencies (libraries), then libaroma and finally a test application
libaroma.sh:
	build just libaroma
app.sh <appname>:
	build application called appname (app source must be in a folder at examples)
recovery.sh <appname> (optionally passing r as second parameter):
	build application called appname and push it to android device in recovery mode, if second parameter is r skips app building
native.sh <appname> (optionally passing r as second parameter):
	build application called appname and run it on current pc, if second parameter is r skips app building

At libs folder:
libs/build_all.sh: build all dependencies (libraries)
libs/*.sh: build each library manually (useful if updating single libraries)
